library(PhyInsight)
library(dplyr)
specdata <- PhyInsight::querySpecData("Ursidae") # Ursidae (family)
specdata_orig <- specdata
table(specdata$markercode)
table(specdata_orig$markercode)
### automatically find the name most common marker
markerCommon <-
subset(specdata, markercode == row.names(as.data.frame(sort(table(specdata$markercode), decreasing = T)[1]))
)
row.names(markerCommon) <- 1:length(markerCommon[,1])
###
specdata <- subset(specdata, markercode == "COI-5P")
#
specdata <- PhyInsight::getSpeciesRepr(specdata)
specdata <- specdata_orig
table(specdata$markercode)
table(specdata_orig$markercode)
### automatically find the name most common marker
markerCommon <-
subset(specdata, markercode == row.names(as.data.frame(sort(table(specdata$markercode), decreasing = T)[1]))
)
row.names(markerCommon) <- 1:length(markerCommon[,1])
###
specdata <- subset(specdata, markercode == "COI-5P")
DNABin <- genDNABin(specdata)
DNAStringset <- genDNAStringSet(DNABin)
DNAStringSet_manip <- ManipStringSet(DNAStringset)
################################################################################
### test  3
test3 <- rmBadStrings_3(
DNAStringSet_manip,
specdata,
rmOutliers = F#,
#    max_Z_score = 20
)
################################################################################
### test  3
test3 <- rmBadStrings_3(
DNAStringSet_manip,
specdata,
rmOutliers = T#,
#    max_Z_score = 20
)
specdata <- specdata_orig
table(specdata$markercode)
table(specdata_orig$markercode)
### automatically find the name most common marker
markerCommon <-
subset(specdata, markercode == row.names(as.data.frame(sort(table(specdata$markercode), decreasing = T)[1]))
)
row.names(markerCommon) <- 1:length(markerCommon[,1])
###
specdata <- subset(specdata, markercode == "COI-5P")
specdata <- PhyInsight::getSpeciesRepr(specdata)
DNABin <- genDNABin(specdata)
DNAStringset <- genDNAStringSet(DNABin)
DNAStringSet_manip <- ManipStringSet(DNAStringset)
################################################################################
### test  3
test3 <- rmBadStrings_3(
DNAStringSet_manip,
specdata,
rmOutliers = T#,
#    max_Z_score = 20
)
###
test3[[1]] %>% length
test3[[2]]$processid %>% length
plot(genPhytree(DNAStringSet_manip), specdata)
plot(genPhytree(DNAStringSet_manip))
specdata <- specdata_orig
### automatically find the name most common marker
markerCommon <-
subset(specdata, markercode == row.names(as.data.frame(sort(table(specdata$markercode), decreasing = T)[1]))
)
row.names(markerCommon) <- 1:length(markerCommon[,1])
###
specdata <- subset(specdata, markercode == "COI-5P")
specdata <- PhyInsight::getGenusRepr(specdata)
DNABin <- genDNABin(specdata)
DNAStringset <- genDNAStringSet(DNABin)
DNAStringSet_manip <- ManipStringSet(DNAStringset)
################################################################################
### test  3
test3 <- rmBadStrings_3(
DNAStringSet_manip,
specdata,
rmOutliers = T#,
#    max_Z_score = 20
)
###
test3[[1]] %>% length
test3[[2]]$processid %>% length
plot(genPhytree(DNAStringSet_manip))
specdata <- specdata_orig
table(specdata$markercode)
table(specdata_orig$markercode)
### automatically find the name most common marker
markerCommon <-
subset(specdata, markercode == row.names(as.data.frame(sort(table(specdata$markercode), decreasing = T)[1]))
)
row.names(markerCommon) <- 1:length(markerCommon[,1])
###
specdata <- subset(specdata, markercode == "COI-5P")
specdata <- PhyInsight::getSpeciesRepr(specdata)
DNABin <- genDNABin(specdata)
DNAStringset <- genDNAStringSet(DNABin)
DNAStringSet_manip <- ManipStringSet(DNAStringset)
################################################################################
### test  3
test3 <- rmBadStrings_3(
DNAStringSet_manip,
specdata,
rmOutliers = T#,
#    max_Z_score = 20
)
###
test3[[1]] %>% length
test3[[2]]$processid %>% length
###
PhyInsight::savePhytree(
phyloTree = genPhytree(test3[[1]]),
specimen_dataframe = test3[[2]],
tree_file_name = "tree #3.pdf",
open_PDF = T,
label_offset = 0,
label_size = 0.75
)
dev.off
dev.off()
rm(list=ls())
specdata <- PhyInsight::querySpecData("Ursidae") # Ursidae (family)
specdata_orig <- specdata
table(specdata$markercode)
table(specdata_orig$markercode)
### automatically find the name most common marker
markerCommon <-
subset(specdata, markercode == row.names(as.data.frame(sort(table(specdata$markercode), decreasing = T)[1]))
)
row.names(markerCommon) <- 1:length(markerCommon[,1])
###
specdata <- subset(specdata, markercode == "COI-5P")
DNABin <- genDNABin(specdata)
DNAStringset <- genDNAStringSet(DNABin)
DNAStringSet_manip <- ManipStringSet(DNAStringset)
specdata <- specdata_orig
table(specdata$markercode)
table(specdata_orig$markercode)
### automatically find the name most common marker
markerCommon <-
subset(specdata, markercode == row.names(as.data.frame(sort(table(specdata$markercode), decreasing = T)[1]))
)
row.names(markerCommon) <- 1:length(markerCommon[,1])
###
specdata <- subset(specdata, markercode == "COI-5P")
#
specdata <- PhyInsight::getSpeciesRepr(specdata)
DNABin <- genDNABin(specdata)
DNAStringset <- genDNAStringSet(DNABin)
DNAStringSet_manip <- ManipStringSet(DNAStringset)
Phytree <- genPhytree(DNAStringSet_manip)
plot(Phytree)
###
PhyInsight::savePhytree(
phyloTree = DNAStringset,
specimen_dataframe = specdata,
tree_file_name = "new_phylo_tree.pdf",
open_PDF = T,
label_offset = 0,
label_size = 0.75
)
###
PhyInsight::savePhytree(
phyloTree = DNAStringset,
specimen_dataframe = specdata,
tree_file_name = "new_phylo_tree.pdf",
open_PDF = T,
label_offset = 0,
label_size = 0.75
)
###
PhyInsight::savePhytree(
phyloTree = DNAStringset_manip,
specimen_dataframe = specdata,
tree_file_name = "new_phylo_tree.pdf",
open_PDF = T,
label_offset = 0,
label_size = 0.75
)
###
PhyInsight::savePhytree(
phyloTree = DNAStringSet,
specimen_dataframe = specdata,
tree_file_name = "new_phylo_tree.pdf",
open_PDF = T,
label_offset = 0,
label_size = 0.75
)
###
PhyInsight::savePhytree(
phyloTree = DNAStringSet_manip,
specimen_dataframe = specdata,
tree_file_name = "new_phylo_tree.pdf",
open_PDF = T,
label_offset = 0,
label_size = 0.75
)
DNAStringSet_manip
specdata
###
PhyInsight::savePhytree(
phyloTree = DNAStringSet_manip,
specimen_dataframe = specdata,
tree_file_name = "new_phylo_tree.pdf",
open_PDF = T,
label_offset = 0,
label_size = 0.75
)
specdata$processid %>% length
DNAStringSet_manip
###
PhyInsight::savePhytree(
phyloTree = DNAStringSet_manip,
specimen_dataframe = specdata,
tree_file_name = "new_phylo_tree.pdf",
open_PDF = T,
label_offset = 0,
label_size = 0.75
)
###
PhyInsight::savePhytree(
phyloTree = DNAStringSet_manip,
specimen_dataframe = specdata,
tree_file_name = "new_phylo_tree.pdf",
open_PDF = T,
label_offset = 0,
label_size = 0.75
)
###
PhyInsight::savePhytree(
phyloTree = DNAStringSet_manip,
specimen_dataframe = specdata,
tree_file_name = "new_phylo_tree.pdf",
open_PDF = T,
label_offset = 0,
label_size = 0.75
)
specdata
DNAStringSet_manip
plot(Phytree)
names(Phytree)
names(Phytree$edge)
names(Phytree$tip.label)
names(Phytree$Nnode)
names(Phytree$edge.length)
Phytree$edge
Phytree$edge.length
Phytree$tip.label
specdata$country
specdata$species_name
Phytree$tip.label
Phytree$tip.label <- specdata$species_name
plot(Phytree)
plot(
Phytree,
label.offset = 0.05
)
plot(
Phytree,
label.offset = 0.005
)
plot(
Phytree,
label.offset = 0.0005
)
plot(
Phytree,
label.offset = 0.0005,
cex = 0.2
)
plot(
Phytree,
label.offset = 0.0005,
cex = 1
)
plot(
Phytree,
label.offset = 0.0005,
cex = 0.6
)
plot(
Phytree,
label.offset = 0.0005,
cex = 0.8
)
Phytree <- genPhytree(DNAStringSet_manip)
class(Phytree)
dev.off()
library(PhyInsight)
paste(specdata$species_name, "|", specdata$country)
# automatically manipulate the DNA strings
DNAStringSet <- ManipStringSet(DNAStringset)
# automatically generate a phylo tree
PhyloTree <- genPhytree(DNAStringSet)
# change the label names
PhyloTree$tip.label <- paste(specdata$species_name, "|", specdata$country)
specdata$species_name
specdata$species_name
specdata$country
specdata$species_name
specdata$genus_name
specdata$subspecies_name
specdata$associated_specimens
specdata$species_taxID
specdata$subspecies_taxID
specdata$subspecies_name
# automatically generate a phylo tree
PhyloTree <- genPhytree(DNAStringSet)
# change the label names
PhyloTree$tip.label <- paste(specdata$genus_name, "|", specdata$species_name)
# plot the phylo tree
plot(
PhyloTree,
label.offset = 0.0005,
cex = 0.8,
main = "Ursidae Phylogenetic Tree"
)
# Your input string
input_string <- "yeah you"
# Split the string based on space
split_string <- strsplit(input_string, " ")[[1]]
split_string
# Extract the word after the space
word_after_space <- split_string[2]
# Print the result
print(word_after_space)
# Your input string
input_string <- "yeah you"
# Split the string based on space
split_string <- strsplit(input_string, " ")#[[1]]
split_string
# Your input string
input_string <- specdata$species_name
# Split the string based on space
split_string <- strsplit(input_string, " ")[[1]]
split_string
# Your input string
input_string <- specdata$species_name
input_string
1L
# Your input string
species_names <- specdata$species_name
species_names
# Split the string based on space
split_string <- strsplit(species_names, " ")[[1]]
split_string
# Split the string based on space
split_string <- apply(
species_names,
strsplit(species_names, " ")[[1]]
)
# Split the string based on space
split_string <- lapply(
species_names,
strsplit(species_names, " ")[[1]]
)
species_names
# Your input string
species_names <- specdata$species_name
# Split the string based on space
split_string <- lapply(
species_names,
strsplit(" ")[[1]]
)
rm(list=ls())
PhyInsight::savePhytree
library(PhyInsight)
# query the data using the taxon name
specdata <- querySpecData("Ursidae")
# check the number of DNA marker codes
table(specdata$markercode)
# subset results that only have nucleotides from the COI-5P region
subset(specdata, markercode == "COI-5P")
# get one observation per species
specdata <- getSpeciesRepr(specdata)
# generate a DNA bin
DNABin <- genDNABin(specdata)
# use the DNA bin to create a DNA string set
DNAStringset <- genDNAStringSet(DNABin)
# automatically manipulate the DNA strings
DNAStringSet <- ManipStringSet(DNAStringset)
# automatically generate a phylo tree
PhyloTree <- genPhytree(DNAStringSet)
# change the label names
PhyloTree$tip.label <- paste(specdata$genus_name, "|", specdata$species_name)
plot(
PhyloTree,
label.offset = 0.001,
cex = 0.8
)
rm(list=ls())
rm(list=ls())
setwd("C:/Users/jimmy/OneDrive/R/PhyInsight_Workspace/phylo_trees")
library(PhyInsight)
library(dplyr)
specdata <- PhyInsight::querySpecData("Ursidae") # Ursidae (family)
specdata_orig <- specdata
table(specdata$markercode)
table(specdata_orig$markercode)
### automatically find the name most common marker
markerCommon <-
subset(specdata, markercode == row.names(as.data.frame(sort(table(specdata$markercode), decreasing = T)[1]))
)
row.names(markerCommon) <- 1:length(markerCommon[,1])
###
specdata <- subset(specdata, markercode == "COI-5P")
#
specdata <- PhyInsight::getSpeciesRepr(specdata)
DNABin <- genDNABin(specdata)
DNAStringset <- genDNAStringSet(DNABin)
DNAStringSet_manip <- ManipStringSet(DNAStringset)
plot(genPhytree(DNAStringSet_manip))
dev.off()
rm(list=ls())
setwd("C:/Users/jimmy/OneDrive/R/PhyInsight_Workspace/phylo_trees")
library(PhyInsight)
library(dplyr)
specdata <- PhyInsight::querySpecData("Ursidae") # Ursidae (family)
specdata_orig <- specdata
table(specdata$markercode)
table(specdata_orig$markercode)
### automatically find the name most common marker
markerCommon <-
subset(specdata, markercode == row.names(as.data.frame(sort(table(specdata$markercode), decreasing = T)[1]))
)
row.names(markerCommon) <- 1:length(markerCommon[,1])
###
specdata <- subset(specdata, markercode == "COI-5P")
#
specdata <- PhyInsight::getSpeciesRepr(specdata)
DNABin <- genDNABin(specdata)
DNAStringset <- genDNAStringSet(DNABin)
DNAStringSet_manip <- ManipStringSet(DNAStringset)
########
# automatically generate a phylo tree
PhyloTree <- genPhytree(DNAStringSet_manip)
# change the label names
PhyloTree$tip.label <- paste(specdata$genus_name, "|", specdata$species_name)
plot(
PhyloTree,
label.offset = 0.001,
cex = 0.8
)
DNAStringSet <- ManipStringSet(DNAStringset)
########
# automatically generate a phylo tree
PhyloTree <- genPhytree(DNAStringSet_manip)
# change the label names
PhyloTree$tip.label <- paste(specdata$genus_name, "|", specdata$species_name)
plot(
PhyloTree,
label.offset = 0.001,
cex = 0.8
)
dev.off()
PhyloTree$tip.label <- paste(specdata$genus_name, "|", specdata$species_name)
plot(
PhyloTree,
label.offset = 0.001,
cex = 0.8
)
args(rmBadStrings_3)
dev.off()
rm(list=ls())
# preview homepage
pkgdown::build_home()
# Install released version from CRAN
library(pkgdown)
# Run once to configure your package to use pkgdown
usethis::use_pkgdown()
# Install released version from CRAN
library(pkgdown)
# Run once to configure your package to use pkgdown
usethis::use_pkgdown()
getwd()
setwd("C:/Users/jimmy/OneDrive/R/PhyInsight_Directory/PhyInsight")
# Install released version from CRAN
library(pkgdown)
# Run once to configure your package to use pkgdown
usethis::use_pkgdown()
# preview homepage
pkgdown::build_home()
querySpecData
library(devtools)
devtools::document()
devtools::build(vignettes = T)
install.packages("C:/Users/jimmy/OneDrive/R/PhyInsight_Directory/PhyInsight_0.1.0.tar.gz", repos = NULL, type = "source")
# preview homepage
pkgdown::build_home()
#
?pkgdown::build_site()
devtools::document()
devtools::build(vignettes = T)
# preview homepage
pkgdown::build_home()
devtools::build(vignettes = F)
devtools::build_vignettes("C:\\Users\\jimmy\\OneDrive\\R\\PhyInsight_Directory\\PhyInsight\\vignettes")
devtools::build_vignettes("C:\\Users\\jimmy\\OneDrive\\R\\PhyInsight_Directory\\PhyInsight\\vignettes")
devtools::document
devtools::document()
devtools::build(vignettes = T)
